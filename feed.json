{
    "version": "https://jsonfeed.org/version/1",
    "title": "小城博客",
    "description": "这是我构建的第一个博客",
    "home_page_url": "https://imxiaocheng.github.io",
    "items": [
        {
            "id": "https://imxiaocheng.github.io/2023/05/20/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/",
            "url": "https://imxiaocheng.github.io/2023/05/20/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/",
            "title": "博客搭建",
            "date_published": "2023-05-20T11:30:39.000Z",
            "content_html": "<h1 id=\"hexo-new-新文章\"><a class=\"markdownIt-Anchor\" href=\"#hexo-new-新文章\">#</a> hexo new “新文章”</h1>\n<h1 id=\"hexo-clean-hexo-g-hexo-d\"><a class=\"markdownIt-Anchor\" href=\"#hexo-clean-hexo-g-hexo-d\">#</a> hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</h1>\n",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://imxiaocheng.github.io/2023/05/20/pagluyaowen/",
            "url": "https://imxiaocheng.github.io/2023/05/20/pagluyaowen/",
            "title": "luyaowen",
            "date_published": "2023-05-20T11:05:02.000Z",
            "content_html": "<h1 id=\"这是耀文兄的个人辉煌生涯\"><a class=\"markdownIt-Anchor\" href=\"#这是耀文兄的个人辉煌生涯\">#</a> 这是耀文兄的个人辉煌生涯</h1>\n<p>6666</p>\n",
            "tags": [
                "people"
            ]
        },
        {
            "id": "https://imxiaocheng.github.io/2023/05/14/mysql%E9%AB%98%E7%BA%A7/",
            "url": "https://imxiaocheng.github.io/2023/05/14/mysql%E9%AB%98%E7%BA%A7/",
            "title": "mysql高级",
            "date_published": "2023-05-14T13:58:13.000Z",
            "content_html": "<h2 id=\"mysql高级\"><a class=\"markdownIt-Anchor\" href=\"#mysql高级\">#</a> mysql 高级</h2>\n<p><strong>今日目标</strong></p>\n<blockquote>\n<ul>\n<li>\n<p>掌握约束的使用</p>\n</li>\n<li>\n<p>掌握表关系及建表原则</p>\n</li>\n<li>\n<p>重点掌握多表查询操作</p>\n</li>\n<li>\n<p>掌握事务操作</p>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"1约束\"><a class=\"markdownIt-Anchor\" href=\"#1约束\">#</a> 1，约束</h2>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724104749122.png\" alt=\"image-20210724104749122\" style=\"zoom:70%;\" />\n<p>上面表中可以看到表中数据存在一些问题：</p>\n<ul>\n<li>\n<p>id 列一般是用标示数据的唯一性的，而上述表中的 id 为 1 的有三条数据，并且  <code>马花疼</code>  没有 id 进行标示</p>\n</li>\n<li>\n<p><code>柳白</code>  这条数据的 age 列的数据是 3000，而人也不可能活到 3000 岁</p>\n</li>\n<li>\n<p><code>马运</code>   这条数据的 math 数学成绩是 - 5，而数学学得再不好也不可能出现负分</p>\n</li>\n<li>\n<p><code>柳青</code>  这条数据的 english 列（英文成绩）值为 null，而成绩即使没考也得是 0 分</p>\n</li>\n</ul>\n<p>针对上述数据问题，我们就可以从数据库层面在添加数据的时候进行限制，这个就是约束。</p>\n<h3 id=\"11-概念\"><a class=\"markdownIt-Anchor\" href=\"#11-概念\">#</a> 1.1  概念</h3>\n<ul>\n<li>\n<p>约束是作用于表中列上的规则，用于限制加入表的数据</p>\n<p>例如：我们可以给 id 列加约束，让其值不能重复，不能为 null 值。</p>\n</li>\n<li>\n<p>约束的存在保证了数据库中数据的正确性、有效性和完整性</p>\n<p>添加约束可以在添加数据的时候就限制不正确的数据，年龄是 3000，数学成绩是 - 5 分这样无效的数据，继而保障数据的完整性。</p>\n</li>\n</ul>\n<h3 id=\"12-分类\"><a class=\"markdownIt-Anchor\" href=\"#12-分类\">#</a> 1.2  分类</h3>\n<ul>\n<li>\n<p><strong>非空约束： 关键字是 NOT NULL</strong></p>\n<p>保证列中所有的数据不能有 null 值。</p>\n<p>例如：id 列在添加  <code>马花疼</code>  这条数据时就不能添加成功。</p>\n</li>\n<li>\n<p><strong>唯一约束：关键字是  UNIQUE</strong></p>\n<p>保证列中所有数据各不相同。</p>\n<p>例如：id 列中三条数据的值都是 1，这样的数据在添加时是绝对不允许的。</p>\n</li>\n<li>\n<p><strong>主键约束： 关键字是  PRIMARY KEY</strong></p>\n<p>主键是一行数据的唯一标识，要求非空且唯一。一般我们都会给没张表添加一个主键列用来唯一标识数据。</p>\n<p>例如：上图表中 id 就可以作为主键，来标识每条数据。那么这样就要求数据中 id 的值不能重复，不能为 null 值。</p>\n</li>\n<li>\n<p><strong>检查约束： 关键字是  CHECK</strong></p>\n<p>保证列中的值满足某一条件。</p>\n<p>例如：我们可以给 age 列添加一个范围，最低年龄可以设置为 1，最大年龄就可以设置为 300，这样的数据才更合理些。</p>\n<blockquote>\n<p>注意：MySQL 不支持检查约束。</p>\n<p>这样是不是就没办法保证年龄在指定的范围内了？从数据库层面不能保证，以后可以在 java 代码中进行限制，一样也可以实现要求。</p>\n</blockquote>\n</li>\n<li>\n<p><strong>默认约束： 关键字是   DEFAULT</strong></p>\n<p>保存数据时，未指定值则采用默认值。</p>\n<p>例如：我们在给 english 列添加该约束，指定默认值是 0，这样在添加数据时没有指定具体值时就会采用默认给定的 0。</p>\n</li>\n<li>\n<p><strong>外键约束： 关键字是  FOREIGN KEY</strong></p>\n<p>外键用来让两个表的数据之间建立链接，保证数据的一致性和完整性。</p>\n<p>外键约束现在可能还不太好理解，后面我们会重点进行讲解。</p>\n</li>\n</ul>\n<h3 id=\"13-非空约束\"><a class=\"markdownIt-Anchor\" href=\"#13-非空约束\">#</a> 1.3  非空约束</h3>\n<ul>\n<li>\n<p>概念</p>\n<p>非空约束用于保证列中所有数据不能有 NULL 值</p>\n</li>\n<li>\n<p>语法</p>\n<ul>\n<li>\n<p>添加约束</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 创建表时添加非空约束</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 表名<span class=\"token punctuation\">(</span>\n   列名 数据类型 <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n   …\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 建完表后添加非空约束</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名 <span class=\"token keyword\">MODIFY</span> 字段名 数据类型 <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>删除约束</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名 <span class=\"token keyword\">MODIFY</span> 字段名 数据类型<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"14-唯一约束\"><a class=\"markdownIt-Anchor\" href=\"#14-唯一约束\">#</a> 1.4  唯一约束</h3>\n<ul>\n<li>\n<p>概念</p>\n<p>唯一约束用于保证列中所有数据各不相同</p>\n</li>\n<li>\n<p>语法</p>\n<ul>\n<li>\n<p>添加约束</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 创建表时添加唯一约束</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 表名<span class=\"token punctuation\">(</span>\n   列名 数据类型 <span class=\"token keyword\">UNIQUE</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n   <span class=\"token comment\">-- AUTO_INCREMENT: 当不指定值时自动增长</span>\n   …\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 表名<span class=\"token punctuation\">(</span>\n   列名 数据类型<span class=\"token punctuation\">,</span>\n   …\n   <span class=\"token punctuation\">[</span><span class=\"token keyword\">CONSTRAINT</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>约束名称<span class=\"token punctuation\">]</span> <span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">(</span>列名<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 建完表后添加唯一约束</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名 <span class=\"token keyword\">MODIFY</span> 字段名 数据类型 <span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>删除约束</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名 <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">INDEX</span> 字段名<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"15-主键约束\"><a class=\"markdownIt-Anchor\" href=\"#15-主键约束\">#</a> 1.5  主键约束</h3>\n<ul>\n<li>\n<p>概念</p>\n<p>主键是一行数据的唯一标识，要求非空且唯一</p>\n<p>一张表只能有一个主键</p>\n</li>\n<li>\n<p>语法</p>\n<ul>\n<li>\n<p>添加约束</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 创建表时添加主键约束</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 表名<span class=\"token punctuation\">(</span>\n   列名 数据类型 <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n   …\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 表名<span class=\"token punctuation\">(</span>\n   列名 数据类型<span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">[</span><span class=\"token keyword\">CONSTRAINT</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>约束名称<span class=\"token punctuation\">]</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>列名<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 建完表后添加主键约束</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名 <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>字段名<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>删除约束</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名 <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"16-默认约束\"><a class=\"markdownIt-Anchor\" href=\"#16-默认约束\">#</a> 1.6  默认约束</h3>\n<ul>\n<li>\n<p>概念</p>\n<p>保存数据时，未指定值则采用默认值</p>\n</li>\n<li>\n<p>语法</p>\n<ul>\n<li>\n<p>添加约束</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 创建表时添加默认约束</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 表名<span class=\"token punctuation\">(</span>\n   列名 数据类型 <span class=\"token keyword\">DEFAULT</span> 默认值<span class=\"token punctuation\">,</span>\n   …\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 建完表后添加默认约束</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名 <span class=\"token keyword\">ALTER</span> 列名 <span class=\"token keyword\">SET</span> <span class=\"token keyword\">DEFAULT</span> 默认值<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>删除约束</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名 <span class=\"token keyword\">ALTER</span> 列名 <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">DEFAULT</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"17-约束练习\"><a class=\"markdownIt-Anchor\" href=\"#17-约束练习\">#</a> 1.7  约束练习</h3>\n<p><strong>根据需求，为表添加合适的约束</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 员工表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> emp <span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">-- 员工id，主键且自增长</span>\n    ename <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 员工姓名，非空且唯一</span>\n    joindate <span class=\"token keyword\">DATE</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">-- 入职日期，非空</span>\n    salary <span class=\"token keyword\">DOUBLE</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">-- 工资，非空</span>\n    bonus <span class=\"token keyword\">DOUBLE</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">-- 奖金，如果没有将近默认为0</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上面一定给出了具体的要求，我们可以根据要求创建这张表，并为每一列添加对应的约束。建表语句如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> emp<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 员工表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> emp <span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 员工id，主键且自增长</span>\n  ename <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 员工姓名，非空并且唯一</span>\n  joindate <span class=\"token keyword\">DATE</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 入职日期，非空</span>\n  salary <span class=\"token keyword\">DOUBLE</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 工资，非空</span>\n  bonus <span class=\"token keyword\">DOUBLE</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">0</span> <span class=\"token comment\">-- 奖金，如果没有奖金默认为0</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>通过上面语句可以创建带有约束的  <code>emp</code>  表，约束能不能发挥作用呢。接下来我们一一进行验证，先添加一条没有问题的数据</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>ename<span class=\"token punctuation\">,</span>joindate<span class=\"token punctuation\">,</span>salary<span class=\"token punctuation\">,</span>bonus<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1999-11-11'</span><span class=\"token punctuation\">,</span><span class=\"token number\">8800</span><span class=\"token punctuation\">,</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li><strong>验证主键约束，非空且唯一</strong></li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>ename<span class=\"token punctuation\">,</span>joindate<span class=\"token punctuation\">,</span>salary<span class=\"token punctuation\">,</span>bonus<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1999-11-11'</span><span class=\"token punctuation\">,</span><span class=\"token number\">8800</span><span class=\"token punctuation\">,</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行结果如下：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724114548170.png\" alt=\"image-20210724114548170\" style=\"zoom:80%;\" />\n<p>从上面的结果可以看到，字段  <code>id</code>  不能为 null。那我们重新添加一条数据，如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>ename<span class=\"token punctuation\">,</span>joindate<span class=\"token punctuation\">,</span>salary<span class=\"token punctuation\">,</span>bonus<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1999-11-11'</span><span class=\"token punctuation\">,</span><span class=\"token number\">8800</span><span class=\"token punctuation\">,</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行结果如下：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724114805350.png\" alt=\"image-20210724114805350\" style=\"zoom:80%;\" />\n<p>从上面结果可以看到，1 这个值重复了。所以主键约束是用来限制数据非空且唯一的。那我们再添加一条符合要求的数据</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>ename<span class=\"token punctuation\">,</span>joindate<span class=\"token punctuation\">,</span>salary<span class=\"token punctuation\">,</span>bonus<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1999-11-11'</span><span class=\"token punctuation\">,</span><span class=\"token number\">8800</span><span class=\"token punctuation\">,</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行结果如下：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724115024106.png\" alt=\"image-20210724115024106\" style=\"zoom:80%;\" />\n<ul>\n<li><strong>验证非空约束</strong></li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>ename<span class=\"token punctuation\">,</span>joindate<span class=\"token punctuation\">,</span>salary<span class=\"token punctuation\">,</span>bonus<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1999-11-11'</span><span class=\"token punctuation\">,</span><span class=\"token number\">8800</span><span class=\"token punctuation\">,</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行结果如下：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724115149415.png\" alt=\"image-20210724115149415\" style=\"zoom:80%;\" />\n<p>从上面结果可以看到， <code>ename</code>  字段的非空约束生效了。</p>\n<ul>\n<li><strong>验证唯一约束</strong></li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>ename<span class=\"token punctuation\">,</span>joindate<span class=\"token punctuation\">,</span>salary<span class=\"token punctuation\">,</span>bonus<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1999-11-11'</span><span class=\"token punctuation\">,</span><span class=\"token number\">8800</span><span class=\"token punctuation\">,</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行结果如下：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724115336916.png\" alt=\"image-20210724115336916\" style=\"zoom:80%;\" />\n<p>从上面结果可以看到， <code>ename</code>  字段的唯一约束生效了。</p>\n<ul>\n<li><strong>验证默认约束</strong></li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>ename<span class=\"token punctuation\">,</span>joindate<span class=\"token punctuation\">,</span>salary<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'王五'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1999-11-11'</span><span class=\"token punctuation\">,</span><span class=\"token number\">8800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行完上面语句后查询表中数据，如下图可以看到王五这条数据的 bonus 列就有了默认值 0。</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724115547951.png\" alt=\"image-20210724115547951\" style=\"zoom:80%;\" />\n<p><mark>注意：默认约束只有在不给值时才会采用默认值。如果给了 null，那值就是 null 值。</mark></p>\n<p>如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>ename<span class=\"token punctuation\">,</span>joindate<span class=\"token punctuation\">,</span>salary<span class=\"token punctuation\">,</span>bonus<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'赵六'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1999-11-11'</span><span class=\"token punctuation\">,</span><span class=\"token number\">8800</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行完上面语句后查询表中数据，如下图可以看到赵六这条数据的 bonus 列的值是 null。</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724115826516.png\" alt=\"image-20210724115826516\" style=\"zoom:80%;\" />\n<ul>\n<li><strong>验证自动增长： auto_increment  当列是数字类型 并且唯一约束</strong></li>\n</ul>\n<p>重新创建  <code>emp</code>  表，并给 id 列添加自动增长</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 员工表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> emp <span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 员工id，主键且自增长</span>\n  ename <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 员工姓名，非空并且唯一</span>\n  joindate <span class=\"token keyword\">DATE</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 入职日期，非空</span>\n  salary <span class=\"token keyword\">DOUBLE</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 工资，非空</span>\n  bonus <span class=\"token keyword\">DOUBLE</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">0</span> <span class=\"token comment\">-- 奖金，如果没有奖金默认为0</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来给 emp 添加数据，分别验证不给 id 列添加值以及给 id 列添加 null 值，id 列的值会不会自动增长：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">,</span>joindate<span class=\"token punctuation\">,</span>salary<span class=\"token punctuation\">,</span>bonus<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token string\">'赵六'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1999-11-11'</span><span class=\"token punctuation\">,</span><span class=\"token number\">8800</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>ename<span class=\"token punctuation\">,</span>joindate<span class=\"token punctuation\">,</span>salary<span class=\"token punctuation\">,</span>bonus<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token string\">'赵六2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1999-11-11'</span><span class=\"token punctuation\">,</span><span class=\"token number\">8800</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>ename<span class=\"token punctuation\">,</span>joindate<span class=\"token punctuation\">,</span>salary<span class=\"token punctuation\">,</span>bonus<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token string\">'赵六3'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1999-11-11'</span><span class=\"token punctuation\">,</span><span class=\"token number\">8800</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"18-外键约束\"><a class=\"markdownIt-Anchor\" href=\"#18-外键约束\">#</a> 1.8  外键约束</h3>\n<h4 id=\"181-概述\"><a class=\"markdownIt-Anchor\" href=\"#181-概述\">#</a> 1.8.1  概述</h4>\n<p>外键用来让两个表的数据之间建立链接，保证数据的一致性和完整性。</p>\n<p>如何理解上面的概念呢？如下图有两张表，员工表和部门表：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724120904180.png\" alt=\"image-20210724120904180\" style=\"zoom:80%;\" />\n<p>员工表中的 dep_id 字段是部门表的 id 字段关联，也就是说 1 号学生张三属于 1 号部门研发部的员工。现在我要删除 1 号部门，就会出现错误的数据（员工表中属于 1 号部门的数据）。而我们上面说的两张表的关系只是我们认为它们有关系，此时需要通过外键让这两张表产生数据库层面的关系，这样你要删除部门表中的 1 号部门的数据将无法删除。</p>\n<h4 id=\"182-语法\"><a class=\"markdownIt-Anchor\" href=\"#182-语法\">#</a> 1.8.2  语法</h4>\n<ul>\n<li>添加外键约束</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 创建表时添加外键约束</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 表名<span class=\"token punctuation\">(</span>\n   列名 数据类型<span class=\"token punctuation\">,</span>\n   …\n   <span class=\"token punctuation\">[</span><span class=\"token keyword\">CONSTRAINT</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>外键名称<span class=\"token punctuation\">]</span> <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>外键列名<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> 主表<span class=\"token punctuation\">(</span>主表列名<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 建完表后添加外键约束</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名 <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> 外键名称 <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>外键字段名称<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> 主表名称<span class=\"token punctuation\">(</span>主表列名称<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ul>\n<li>删除外键约束</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名 <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> 外键名称<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"183-练习\"><a class=\"markdownIt-Anchor\" href=\"#183-练习\">#</a> 1.8.3  练习</h4>\n<p>根据上述语法创建员工表和部门表，并添加上外键约束：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 删除表</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> emp<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> dept<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 部门表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> dept<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span>\n\tdep_name <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\taddr <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 员工表 </span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> emp<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span>\n\tname <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tage <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n\tdep_id <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n\n\t<span class=\"token comment\">-- 添加外键 dep_id,关联 dept 表的id主键</span>\n\t<span class=\"token keyword\">CONSTRAINT</span> fk_emp_dept <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>dep_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> dept<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\t\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>添加数据</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 添加 2 个部门</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> dept<span class=\"token punctuation\">(</span>dep_name<span class=\"token punctuation\">,</span>addr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'研发部'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'广州'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">'销售部'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 添加员工,dep_id 表示员工所在的部门</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token punctuation\">(</span>NAME<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> dep_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> \n<span class=\"token punctuation\">(</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'王五'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'赵六'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'孙七'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'周八'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时删除  <code>研发部</code>  这条数据，会发现无法删除。</p>\n<p>删除外键</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> emp <span class=\"token keyword\">drop</span> <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">key</span> fk_emp_dept<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>重新添加外键</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> emp <span class=\"token keyword\">add</span> <span class=\"token keyword\">CONSTRAINT</span> fk_emp_dept <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">(</span>dep_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> dept<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"2数据库设计\"><a class=\"markdownIt-Anchor\" href=\"#2数据库设计\">#</a> 2，数据库设计</h2>\n<h3 id=\"21-数据库设计简介\"><a class=\"markdownIt-Anchor\" href=\"#21-数据库设计简介\">#</a> 2.1  数据库设计简介</h3>\n<ul>\n<li>\n<p>软件的研发步骤</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724130925801.png\" alt=\"image-20210724130925801\" style=\"zoom:80%;\" />\n</li>\n<li>\n<p>数据库设计概念</p>\n<ul>\n<li>数据库设计就是根据业务系统的具体需求，结合我们所选用的 DBMS，为这个业务系统构造出最优的数据存储模型。</li>\n<li>建立数据库中的<mark>表结构</mark>以及<mark>表与表之间的关联关系</mark>的过程。</li>\n<li>有哪些表？表里有哪些字段？表和表之间有什么关系？</li>\n</ul>\n</li>\n<li>\n<p>数据库设计的步骤</p>\n<ul>\n<li>\n<p>需求分析（数据是什么？数据具有哪些属性？数据与属性的特点是什么）</p>\n</li>\n<li>\n<p>逻辑分析（通过 ER 图对数据库进行逻辑建模，不需要考虑我们所选用的数据库管理系统）</p>\n<p>如下图就是 ER (Entity/Relation) 图：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724131210759.png\" alt=\"image-20210724131210759\" style=\"zoom:80%;\" />\n</li>\n<li>\n<p>物理设计（根据数据库自身的特点把逻辑设计转换为物理设计）</p>\n</li>\n<li>\n<p>维护设计（1. 对新的需求进行建表；2. 表优化）</p>\n</li>\n</ul>\n</li>\n<li>\n<p>表关系</p>\n<ul>\n<li>\n<p>一对一</p>\n<ul>\n<li>如：用户 和 用户详情</li>\n<li>一对一关系多用于表拆分，将一个实体中经常使用的字段放一张表，不经常使用的字段放另一张表，用于提升查询性能</li>\n</ul>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724133015129.png\" alt=\"image-20210724133015129\" style=\"zoom:80%;\" />\n<p>上图左边是用户的详细信息，而我们真正在展示用户信息时最长用的则是上图右边红框所示，所以我们会将详细信息查分成两周那个表。</p>\n</li>\n<li>\n<p>一对多</p>\n<ul>\n<li>\n<p>如：部门 和 员工</p>\n</li>\n<li>\n<p>一个部门对应多个员工，一个员工对应一个部门。如下图：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724133443094.png\" alt=\"image-20210724133443094\" style=\"zoom:90%;\" />\n</li>\n</ul>\n</li>\n<li>\n<p>多对多</p>\n<ul>\n<li>\n<p>如：商品 和 订单</p>\n</li>\n<li>\n<p>一个商品对应多个订单，一个订单包含多个商品。如下图：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724133704682.png\" alt=\"image-20210724133704682\" style=\"zoom:80%;\" />\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"22-表关系一对多\"><a class=\"markdownIt-Anchor\" href=\"#22-表关系一对多\">#</a> 2.2  表关系 (一对多)</h3>\n<ul>\n<li>\n<p>一对多</p>\n<ul>\n<li>如：部门 和 员工</li>\n<li>一个部门对应多个员工，一个员工对应一个部门。</li>\n</ul>\n</li>\n<li>\n<p>实现方式</p>\n<p><mark>在多的一方建立外键，指向一的一方的主键</mark></p>\n</li>\n<li>\n<p>案例</p>\n<p>我们还是以  <code>员工表</code>  和  <code>部门表</code>  举例:</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724134145803.png\" alt=\"image-20210724134145803\" style=\"zoom:70%;\" />\n<p>经过分析发现，员工表属于多的一方，而部门表属于一的一方，此时我们会在员工表中添加一列（dep_id），指向于部门表的主键（id）：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724134318685.png\" alt=\"image-20210724134318685\" style=\"zoom:70%;\" />\n<p>建表语句如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 删除表</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> tb_emp<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> tb_dept<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 部门表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> tb_dept<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span>\n\tdep_name <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\taddr <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 员工表 </span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> tb_emp<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span>\n\tname <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tage <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n\tdep_id <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n\n\t<span class=\"token comment\">-- 添加外键 dep_id,关联 dept 表的id主键</span>\n\t<span class=\"token keyword\">CONSTRAINT</span> fk_emp_dept <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>dep_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> tb_dept<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\t\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>查看表结构模型图：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724140456921.png\" alt=\"image-20210724140456921\" style=\"zoom:80%;\" />\n</li>\n</ul>\n<h3 id=\"23-表关系多对多\"><a class=\"markdownIt-Anchor\" href=\"#23-表关系多对多\">#</a> 2.3  表关系 (多对多)</h3>\n<ul>\n<li>\n<p>多对多</p>\n<ul>\n<li>如：商品 和 订单</li>\n<li>一个商品对应多个订单，一个订单包含多个商品</li>\n</ul>\n</li>\n<li>\n<p>实现方式</p>\n<p><mark>建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</mark></p>\n</li>\n<li>\n<p>案例</p>\n<p>我们以  <code>订单表</code>  和  <code>商品表</code>  举例：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724134735939.png\" alt=\"image-20210724134735939\" style=\"zoom:70%;\" />\n<p>经过分析发现，订单表和商品表都属于多的一方，此时需要创建一个中间表，在中间表中添加订单表的外键和商品表的外键指向两张表的主键：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724135054834.png\" alt=\"image-20210724135054834\" style=\"zoom:70%;\" />\n<p>建表语句如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 删除表</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> tb_order_goods<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> tb_order<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> tb_goods<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 订单表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> tb_order<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span>\n\tpayment <span class=\"token keyword\">double</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tpayment_type <span class=\"token keyword\">TINYINT</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">status</span> <span class=\"token keyword\">TINYINT</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 商品表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> tb_goods<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span>\n\ttitle <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tprice <span class=\"token keyword\">double</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 订单商品中间表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> tb_order_goods<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span>\n\torder_id <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n\tgoods_id <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n\tcount <span class=\"token keyword\">int</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 建完表后，添加外键</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> tb_order_goods <span class=\"token keyword\">add</span> <span class=\"token keyword\">CONSTRAINT</span> fk_order_id <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">(</span>order_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> tb_order<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> tb_order_goods <span class=\"token keyword\">add</span> <span class=\"token keyword\">CONSTRAINT</span> fk_goods_id <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">(</span>goods_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> tb_goods<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>查看表结构模型图：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724140307910.png\" alt=\"image-20210724140307910\" style=\"zoom:80%;\" />\n</li>\n</ul>\n<h3 id=\"24-表关系一对一\"><a class=\"markdownIt-Anchor\" href=\"#24-表关系一对一\">#</a> 2.4  表关系 (一对一)</h3>\n<ul>\n<li>\n<p>一对一</p>\n<ul>\n<li>如：用户 和 用户详情</li>\n<li>一对一关系多用于表拆分，将一个实体中经常使用的字段放一张表，不经常使用的字段放另一张表，用于提升查询性能</li>\n</ul>\n</li>\n<li>\n<p>实现方式</p>\n<p><mark>在任意一方加入外键，关联另一方主键，并且设置外键为唯一 (UNIQUE)</mark></p>\n</li>\n<li>\n<p>案例</p>\n<p>我们以  <code>用户表</code>  举例：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724135346913.png\" alt=\"image-20210724135346913\" style=\"zoom:70%;\" />\n<p>而在真正使用过程中发现 id、photo、nickname、age、gender 字段比较常用，此时就可以将这张表查分成两张表。</p>\n</li>\n</ul>\n<p>​\t<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724135649341.png\" alt=\"image-20210724135649341\" style=\"zoom:70%;\" /></p>\n<p>​</p>\n<p>​\t建表语句如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> tb_user_desc <span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span>\n\tcity <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tedu <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tincome <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">status</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tdes <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> tb_user <span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span>\n\tphoto <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tnickname <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tage <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n\tgender <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tdesc_id <span class=\"token keyword\">int</span> <span class=\"token keyword\">unique</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">-- 添加外键</span>\n\t<span class=\"token keyword\">CONSTRAINT</span> fk_user_desc <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>desc_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> tb_user_desc<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\t\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>​\t查看表结构模型图：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724141445785.png\" alt=\"image-20210724141445785\" style=\"zoom:80%;\" />\n<h3 id=\"25-数据库设计案例\"><a class=\"markdownIt-Anchor\" href=\"#25-数据库设计案例\">#</a> 2.5  数据库设计案例</h3>\n<p>根据下图设计表及表和表之间的关系：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724141822204.png\" alt=\"image-20210724141822204\" style=\"zoom:80%;\" />\n<p>经过分析，我们分为  <code>专辑表</code>    <code>曲目表</code>    <code>短评表</code>    <code>用户表</code>    4 张表。</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724141550446.png\" alt=\"image-20210724141550446\" style=\"zoom:80%;\" />\n<p>一个专辑可以有多个曲目，一个曲目只能属于某一张专辑，所以专辑表和曲目表的关系是<mark>一对多</mark>。</p>\n<p>一个专辑可以被多个用户进行评论，一个用户可以对多个专辑进行评论，所以专辑表和用户表的关系是 <mark>多对多</mark>。</p>\n<p>一个用户可以发多个短评，一个短评只能是某一个人发的，所以用户表和短评表的关系是 <mark>一对多</mark>。</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724142550839.png\" alt=\"image-20210724142550839\" style=\"zoom:80%;\" />\n<h2 id=\"3多表查询\"><a class=\"markdownIt-Anchor\" href=\"#3多表查询\">#</a> 3，多表查询</h2>\n<p>多表查询顾名思义就是从多张表中一次性的查询出我们想要的数据。我们通过具体的 sql 给他们演示，先准备环境</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> emp<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> dept<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\"># 创建部门表</span>\n\t<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> dept<span class=\"token punctuation\">(</span>\n        did <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n        dname <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\"># 创建员工表</span>\n\t<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> emp <span class=\"token punctuation\">(</span>\n        id <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n        NAME <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        gender <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 性别</span>\n        salary <span class=\"token keyword\">DOUBLE</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 工资</span>\n        join_date <span class=\"token keyword\">DATE</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 入职日期</span>\n        dep_id <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>dep_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> dept<span class=\"token punctuation\">(</span>did<span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 外键，关联部门表(部门表的主键)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">-- 添加部门数据</span>\n\t<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> dept <span class=\"token punctuation\">(</span>dNAME<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'研发部'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">'市场部'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">'财务部'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">'销售部'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">-- 添加员工数据</span>\n\t<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp<span class=\"token punctuation\">(</span>NAME<span class=\"token punctuation\">,</span>gender<span class=\"token punctuation\">,</span>salary<span class=\"token punctuation\">,</span>join_date<span class=\"token punctuation\">,</span>dep_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">'孙悟空'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7200</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2013-02-24'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">'猪八戒'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span><span class=\"token number\">3600</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2010-12-02'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">'唐僧'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span><span class=\"token number\">9000</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2008-08-08'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">'白骨精'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'女'</span><span class=\"token punctuation\">,</span><span class=\"token number\">5000</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2015-10-07'</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">'蜘蛛精'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'女'</span><span class=\"token punctuation\">,</span><span class=\"token number\">4500</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2011-03-14'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">'小白龙'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2500</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2011-02-14'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行下面的多表查询语句</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token punctuation\">,</span> dept<span class=\"token punctuation\">;</span>  <span class=\"token comment\">-- 从emp和dept表中查询所有的字段数据</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>结果如下：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724173630506.png\" alt=\"image-20210724173630506\" style=\"zoom:90%;\" />\n<p>从上面的结果我们看到有一些无效的数据，如  <code>孙悟空</code>  这个员工属于 1 号部门，但也同时关联的 2、3、4 号部门。所以我们要通过限制员工表中的  <code>dep_id</code>  字段的值和部门表  <code>did</code>  字段的值相等来消除这些无效的数据，</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token punctuation\">,</span> dept <span class=\"token keyword\">where</span> emp<span class=\"token punctuation\">.</span>dep_id <span class=\"token operator\">=</span> dept<span class=\"token punctuation\">.</span>did<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行后结果如下：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724174212443.png\" alt=\"image-20210724174212443\" style=\"zoom:90%;\" />\n<p>上面语句就是连接查询，那么多表查询都有哪些呢？</p>\n<ul>\n<li>\n<p>连接查询</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724174717647.png\" alt=\"image-20210724174717647\" style=\"zoom:80%;\" /> \n<ul>\n<li>内连接查询 ：相当于查询 AB 交集数据</li>\n<li>外连接查询\n<ul>\n<li>左外连接查询 ：相当于查询 A 表所有数据和交集部门数据</li>\n<li>右外连接查询 ： 相当于查询 B 表所有数据和交集部分数据</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>子查询</p>\n</li>\n</ul>\n<h3 id=\"31-内连接查询\"><a class=\"markdownIt-Anchor\" href=\"#31-内连接查询\">#</a> 3.1  内连接查询</h3>\n<ul>\n<li>语法</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 隐式内连接</span>\n<span class=\"token keyword\">SELECT</span> 字段列表 <span class=\"token keyword\">FROM</span> 表<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>表<span class=\"token number\">2</span>… <span class=\"token keyword\">WHERE</span> 条件<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 显示内连接</span>\n<span class=\"token keyword\">SELECT</span> 字段列表 <span class=\"token keyword\">FROM</span> 表<span class=\"token number\">1</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">INNER</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">JOIN</span> 表<span class=\"token number\">2</span> <span class=\"token keyword\">ON</span> 条件<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>内连接相当于查询 A B 交集数据</p>\n</blockquote>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724174717647.png\" alt=\"image-20210724174717647\" style=\"zoom:80%;\" />\n<ul>\n<li>\n<p>案例</p>\n<ul>\n<li>\n<p>隐式内连接</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\t<span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span>\n\temp<span class=\"token punctuation\">,</span>\n\tdept\n<span class=\"token keyword\">WHERE</span>\n\temp<span class=\"token punctuation\">.</span>dep_id <span class=\"token operator\">=</span> dept<span class=\"token punctuation\">.</span>did<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行上述语句结果如下：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724175344508.png\" alt=\"image-20210724175344508\" style=\"zoom:80%;\" />\n</li>\n<li>\n<p>查询 emp 的 name， gender，dept 表的 dname</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\temp<span class=\"token punctuation\">.</span> NAME<span class=\"token punctuation\">,</span>\n\temp<span class=\"token punctuation\">.</span>gender<span class=\"token punctuation\">,</span>\n\tdept<span class=\"token punctuation\">.</span>dname\n<span class=\"token keyword\">FROM</span>\n\temp<span class=\"token punctuation\">,</span>\n\tdept\n<span class=\"token keyword\">WHERE</span>\n\temp<span class=\"token punctuation\">.</span>dep_id <span class=\"token operator\">=</span> dept<span class=\"token punctuation\">.</span>did<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行语句结果如下：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724175518159.png\" alt=\"image-20210724175518159\" style=\"zoom:80%;\" />\n<p>上面语句中使用表名指定字段所属有点麻烦，sql 也支持给表指别名，上述语句可以改进为</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\tt1<span class=\"token punctuation\">.</span> NAME<span class=\"token punctuation\">,</span>\n\tt1<span class=\"token punctuation\">.</span>gender<span class=\"token punctuation\">,</span>\n\tt2<span class=\"token punctuation\">.</span>dname\n<span class=\"token keyword\">FROM</span>\n\temp t1<span class=\"token punctuation\">,</span>\n\tdept t2\n<span class=\"token keyword\">WHERE</span>\n\tt1<span class=\"token punctuation\">.</span>dep_id <span class=\"token operator\">=</span> t2<span class=\"token punctuation\">.</span>did<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>显式内连接</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">inner</span> <span class=\"token keyword\">join</span> dept <span class=\"token keyword\">on</span> emp<span class=\"token punctuation\">.</span>dep_id <span class=\"token operator\">=</span> dept<span class=\"token punctuation\">.</span>did<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 上面语句中的inner可以省略，可以书写为如下语句</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp  <span class=\"token keyword\">join</span> dept <span class=\"token keyword\">on</span> emp<span class=\"token punctuation\">.</span>dep_id <span class=\"token operator\">=</span> dept<span class=\"token punctuation\">.</span>did<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>执行结果如下：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724180103531.png\" alt=\"image-20210724180103531\" style=\"zoom:80%;\" />\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"32-外连接查询\"><a class=\"markdownIt-Anchor\" href=\"#32-外连接查询\">#</a> 3.2  外连接查询</h3>\n<ul>\n<li>\n<p>语法</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 左外连接</span>\n<span class=\"token keyword\">SELECT</span> 字段列表 <span class=\"token keyword\">FROM</span> 表<span class=\"token number\">1</span> <span class=\"token keyword\">LEFT</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">OUTER</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">JOIN</span> 表<span class=\"token number\">2</span> <span class=\"token keyword\">ON</span> 条件<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 右外连接</span>\n<span class=\"token keyword\">SELECT</span> 字段列表 <span class=\"token keyword\">FROM</span> 表<span class=\"token number\">1</span> <span class=\"token keyword\">RIGHT</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">OUTER</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">JOIN</span> 表<span class=\"token number\">2</span> <span class=\"token keyword\">ON</span> 条件<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>左外连接：相当于查询 A 表所有数据和交集部分数据</p>\n<p>右外连接：相当于查询 B 表所有数据和交集部分数据</p>\n</blockquote>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724174717647.png\" alt=\"image-20210724174717647\" style=\"zoom:80%;\" />\n</li>\n<li>\n<p>案例</p>\n<ul>\n<li>\n<p>查询 emp 表所有数据和对应的部门信息（左外连接）</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">left</span> <span class=\"token keyword\">join</span> dept <span class=\"token keyword\">on</span> emp<span class=\"token punctuation\">.</span>dep_id <span class=\"token operator\">=</span> dept<span class=\"token punctuation\">.</span>did<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行语句结果如下：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724180542757.png\" alt=\"image-20210724180542757\" style=\"zoom:80%;\" />\n<p>结果显示查询到了左表（emp）中所有的数据及两张表能关联的数据。</p>\n</li>\n<li>\n<p>查询 dept 表所有数据和对应的员工信息（右外连接）</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">right</span> <span class=\"token keyword\">join</span> dept <span class=\"token keyword\">on</span> emp<span class=\"token punctuation\">.</span>dep_id <span class=\"token operator\">=</span> dept<span class=\"token punctuation\">.</span>did<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行语句结果如下：</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724180613494.png\" alt=\"image-20210724180613494\" style=\"zoom:80%;\" />\n<p>结果显示查询到了右表（dept）中所有的数据及两张表能关联的数据。</p>\n<p>要查询出部门表中所有的数据，也可以通过左外连接实现，只需要将两个表的位置进行互换：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> dept <span class=\"token keyword\">left</span> <span class=\"token keyword\">join</span> emp <span class=\"token keyword\">on</span> emp<span class=\"token punctuation\">.</span>dep_id <span class=\"token operator\">=</span> dept<span class=\"token punctuation\">.</span>did<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"33-子查询\"><a class=\"markdownIt-Anchor\" href=\"#33-子查询\">#</a> 3.3  子查询</h3>\n<ul>\n<li>\n<p>概念</p>\n<p><mark>查询中嵌套查询，称嵌套查询为子查询。</mark></p>\n<p>什么是查询中嵌套查询呢？我们通过一个例子来看：</p>\n<p><strong>需求：查询工资高于猪八戒的员工信息。</strong></p>\n<p>来实现这个需求，我们就可以通过二步实现，第一步：先查询出来 猪八戒的工资</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> salary <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'猪八戒'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>第二步：查询工资高于猪八戒的员工信息</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> salary <span class=\"token operator\">></span> <span class=\"token number\">3600</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>第二步中的 3600 可以通过第一步的 sql 查询出来，所以将 3600 用第一步的 sql 语句进行替换</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> salary <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> salary <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'猪八戒'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这就是查询语句中嵌套查询语句。</p>\n</li>\n<li>\n<p>子查询根据查询结果不同，作用不同</p>\n<ul>\n<li>子查询语句结果是单行单列，子查询语句作为条件值，使用 =  !=  &gt;  &lt;  等进行条件判断</li>\n<li>子查询语句结果是多行单列，子查询语句作为条件值，使用 in 等关键字进行条件判断</li>\n<li>子查询语句结果是多行多列，子查询语句作为虚拟表</li>\n</ul>\n</li>\n<li>\n<p>案例</p>\n<ul>\n<li>\n<p>查询 ‘财务部’ 和 ‘市场部’ 所有的员工信息</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询 '财务部' 或者 '市场部' 所有的员工的部门did</span>\n<span class=\"token keyword\">select</span> did <span class=\"token keyword\">from</span> dept <span class=\"token keyword\">where</span> dname <span class=\"token operator\">=</span> <span class=\"token string\">'财务部'</span> <span class=\"token operator\">or</span> dname <span class=\"token operator\">=</span> <span class=\"token string\">'市场部'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> dep_id <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> did <span class=\"token keyword\">from</span> dept <span class=\"token keyword\">where</span> dname <span class=\"token operator\">=</span> <span class=\"token string\">'财务部'</span> <span class=\"token operator\">or</span> dname <span class=\"token operator\">=</span> <span class=\"token string\">'市场部'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>查询入职日期是 ‘2011-11-11’ 之后的员工信息和部门信息</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询入职日期是 '2011-11-11' 之后的员工信息</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> join_date <span class=\"token operator\">></span> <span class=\"token string\">'2011-11-11'</span> <span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 将上面语句的结果作为虚拟表和dept表进行内连接查询</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> join_date <span class=\"token operator\">></span> <span class=\"token string\">'2011-11-11'</span> <span class=\"token punctuation\">)</span> t1<span class=\"token punctuation\">,</span> dept <span class=\"token keyword\">where</span> t1<span class=\"token punctuation\">.</span>dep_id <span class=\"token operator\">=</span> dept<span class=\"token punctuation\">.</span>did<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"34-案例\"><a class=\"markdownIt-Anchor\" href=\"#34-案例\">#</a> 3.4  案例</h3>\n<ul>\n<li>环境准备：</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> emp<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> dept<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> job<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> salarygrade<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 部门表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> dept <span class=\"token punctuation\">(</span>\n  did <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 部门id</span>\n  dname <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 部门名称</span>\n  loc <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 部门所在地</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 职务表，职务名称，职务描述</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> job <span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n  jname <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  description <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 员工表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> emp <span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 员工id</span>\n  ename <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 员工姓名</span>\n  job_id <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 职务id</span>\n  mgr <span class=\"token keyword\">INT</span> <span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 上级领导</span>\n  joindate <span class=\"token keyword\">DATE</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 入职日期</span>\n  salary <span class=\"token keyword\">DECIMAL</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 工资</span>\n  bonus <span class=\"token keyword\">DECIMAL</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 奖金</span>\n  dept_id <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 所在部门编号</span>\n  <span class=\"token keyword\">CONSTRAINT</span> emp_jobid_ref_job_id_fk <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>job_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> job <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">CONSTRAINT</span> emp_deptid_ref_dept_id_fk <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>dept_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> dept <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 工资等级表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> salarygrade <span class=\"token punctuation\">(</span>\n  grade <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">-- 级别</span>\n  losalary <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">-- 最低工资</span>\n  hisalary <span class=\"token keyword\">INT</span> <span class=\"token comment\">-- 最高工资</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\n<span class=\"token comment\">-- 添加4个部门</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> dept<span class=\"token punctuation\">(</span>did<span class=\"token punctuation\">,</span>dname<span class=\"token punctuation\">,</span>loc<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> \n<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token string\">'教研部'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'北京'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token string\">'学工部'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'上海'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token string\">'销售部'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'广州'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span><span class=\"token string\">'财务部'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'深圳'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 添加4个职务</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> job <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> jname<span class=\"token punctuation\">,</span> description<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'董事长'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'管理整个公司，接单'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'经理'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'管理部门员工'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'销售员'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'向客人推销产品'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'文员'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'使用办公软件'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">-- 添加员工</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>ename<span class=\"token punctuation\">,</span>job_id<span class=\"token punctuation\">,</span>mgr<span class=\"token punctuation\">,</span>joindate<span class=\"token punctuation\">,</span>salary<span class=\"token punctuation\">,</span>bonus<span class=\"token punctuation\">,</span>dept_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> \n<span class=\"token punctuation\">(</span><span class=\"token number\">1001</span><span class=\"token punctuation\">,</span><span class=\"token string\">'孙悟空'</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1004</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2000-12-17'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'8000.00'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1002</span><span class=\"token punctuation\">,</span><span class=\"token string\">'卢俊义'</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1006</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2001-02-20'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'16000.00'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3000.00'</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1003</span><span class=\"token punctuation\">,</span><span class=\"token string\">'林冲'</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1006</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2001-02-22'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'12500.00'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'5000.00'</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1004</span><span class=\"token punctuation\">,</span><span class=\"token string\">'唐僧'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1009</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2001-04-02'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'29750.00'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1005</span><span class=\"token punctuation\">,</span><span class=\"token string\">'李逵'</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1006</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2001-09-28'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'12500.00'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'14000.00'</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1006</span><span class=\"token punctuation\">,</span><span class=\"token string\">'宋江'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1009</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2001-05-01'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'28500.00'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1007</span><span class=\"token punctuation\">,</span><span class=\"token string\">'刘备'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1009</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2001-09-01'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'24500.00'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1008</span><span class=\"token punctuation\">,</span><span class=\"token string\">'猪八戒'</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1004</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2007-04-19'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'30000.00'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1009</span><span class=\"token punctuation\">,</span><span class=\"token string\">'罗贯中'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2001-11-17'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'50000.00'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1010</span><span class=\"token punctuation\">,</span><span class=\"token string\">'吴用'</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1006</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2001-09-08'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'15000.00'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'0.00'</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1011</span><span class=\"token punctuation\">,</span><span class=\"token string\">'沙僧'</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1004</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2007-05-23'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'11000.00'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1012</span><span class=\"token punctuation\">,</span><span class=\"token string\">'李逵'</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1006</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2001-12-03'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'9500.00'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1013</span><span class=\"token punctuation\">,</span><span class=\"token string\">'小白龙'</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1004</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2001-12-03'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'30000.00'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1014</span><span class=\"token punctuation\">,</span><span class=\"token string\">'关羽'</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1007</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2002-01-23'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'13000.00'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">-- 添加5个工资等级</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> salarygrade<span class=\"token punctuation\">(</span>grade<span class=\"token punctuation\">,</span>losalary<span class=\"token punctuation\">,</span>hisalary<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> \n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">7000</span><span class=\"token punctuation\">,</span><span class=\"token number\">12000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">12010</span><span class=\"token punctuation\">,</span><span class=\"token number\">14000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">14010</span><span class=\"token punctuation\">,</span><span class=\"token number\">20000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">20010</span><span class=\"token punctuation\">,</span><span class=\"token number\">30000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">30010</span><span class=\"token punctuation\">,</span><span class=\"token number\">99990</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>\n<p>需求</p>\n<ol>\n<li>\n<p>查询所有员工信息。查询员工编号，员工姓名，工资，职务名称，职务描述</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">/*\n\t分析：\n\t\t1. 员工编号，员工姓名，工资 信息在emp 员工表中\n\t\t2. 职务名称，职务描述 信息在 job 职务表中\n\t\t3. job 职务表 和 emp 员工表 是 一对多的关系 emp.job_id = job.id\n*/</span>\n<span class=\"token comment\">-- 方式一 ：隐式内连接</span>\n<span class=\"token keyword\">SELECT</span>\n\temp<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n\temp<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\temp<span class=\"token punctuation\">.</span>salary<span class=\"token punctuation\">,</span>\n\tjob<span class=\"token punctuation\">.</span>jname<span class=\"token punctuation\">,</span>\n\tjob<span class=\"token punctuation\">.</span>description\n<span class=\"token keyword\">FROM</span>\n\temp<span class=\"token punctuation\">,</span>\n\tjob\n<span class=\"token keyword\">WHERE</span>\n\temp<span class=\"token punctuation\">.</span>job_id <span class=\"token operator\">=</span> job<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 方式二 ：显式内连接</span>\n<span class=\"token keyword\">SELECT</span>\n\temp<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n\temp<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\temp<span class=\"token punctuation\">.</span>salary<span class=\"token punctuation\">,</span>\n\tjob<span class=\"token punctuation\">.</span>jname<span class=\"token punctuation\">,</span>\n\tjob<span class=\"token punctuation\">.</span>description\n<span class=\"token keyword\">FROM</span>\n\temp\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> job <span class=\"token keyword\">ON</span> emp<span class=\"token punctuation\">.</span>job_id <span class=\"token operator\">=</span> job<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>查询员工编号，员工姓名，工资，职务名称，职务描述，部门名称，部门位置</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">/*\n\t分析：\n\t\t1. 员工编号，员工姓名，工资 信息在emp 员工表中\n\t\t2. 职务名称，职务描述 信息在 job 职务表中\n\t\t3. job 职务表 和 emp 员工表 是 一对多的关系 emp.job_id = job.id\n\n\t\t4. 部门名称，部门位置 来自于 部门表 dept\n\t\t5. dept 和 emp 一对多关系 dept.id = emp.dept_id\n*/</span>\n\n<span class=\"token comment\">-- 方式一 ：隐式内连接</span>\n<span class=\"token keyword\">SELECT</span>\n\temp<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n\temp<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\temp<span class=\"token punctuation\">.</span>salary<span class=\"token punctuation\">,</span>\n\tjob<span class=\"token punctuation\">.</span>jname<span class=\"token punctuation\">,</span>\n\tjob<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">,</span>\n\tdept<span class=\"token punctuation\">.</span>dname<span class=\"token punctuation\">,</span>\n\tdept<span class=\"token punctuation\">.</span>loc\n<span class=\"token keyword\">FROM</span>\n\temp<span class=\"token punctuation\">,</span>\n\tjob<span class=\"token punctuation\">,</span>\n\tdept\n<span class=\"token keyword\">WHERE</span>\n\temp<span class=\"token punctuation\">.</span>job_id <span class=\"token operator\">=</span> job<span class=\"token punctuation\">.</span>id\n\t<span class=\"token operator\">and</span> dept<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 方式二 ：显式内连接</span>\n<span class=\"token keyword\">SELECT</span>\n\temp<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n\temp<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\temp<span class=\"token punctuation\">.</span>salary<span class=\"token punctuation\">,</span>\n\tjob<span class=\"token punctuation\">.</span>jname<span class=\"token punctuation\">,</span>\n\tjob<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">,</span>\n\tdept<span class=\"token punctuation\">.</span>dname<span class=\"token punctuation\">,</span>\n\tdept<span class=\"token punctuation\">.</span>loc\n<span class=\"token keyword\">FROM</span>\n\temp\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> job <span class=\"token keyword\">ON</span> emp<span class=\"token punctuation\">.</span>job_id <span class=\"token operator\">=</span> job<span class=\"token punctuation\">.</span>id\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> dept <span class=\"token keyword\">ON</span> dept<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>查询员工姓名，工资，工资等级</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">/*\n\t分析：\n\t\t1. 员工姓名，工资 信息在emp 员工表中\n\t\t2. 工资等级 信息在 salarygrade 工资等级表中\n\t\t3. emp.salary >= salarygrade.losalary  and emp.salary &lt;= salarygrade.hisalary\n*/</span>\n<span class=\"token keyword\">SELECT</span>\n\temp<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\temp<span class=\"token punctuation\">.</span>salary<span class=\"token punctuation\">,</span>\n\tt2<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span>\n\temp<span class=\"token punctuation\">,</span>\n\tsalarygrade t2\n<span class=\"token keyword\">WHERE</span>\n\temp<span class=\"token punctuation\">.</span>salary <span class=\"token operator\">>=</span> t2<span class=\"token punctuation\">.</span>losalary\n<span class=\"token operator\">AND</span> emp<span class=\"token punctuation\">.</span>salary <span class=\"token operator\">&lt;=</span> t2<span class=\"token punctuation\">.</span>hisalary<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>查询员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">/*\n\t分析：\n\t\t1. 员工编号，员工姓名，工资 信息在emp 员工表中\n\t\t2. 职务名称，职务描述 信息在 job 职务表中\n\t\t3. job 职务表 和 emp 员工表 是 一对多的关系 emp.job_id = job.id\n\n\t\t4. 部门名称，部门位置 来自于 部门表 dept\n\t\t5. dept 和 emp 一对多关系 dept.id = emp.dept_id\n\t\t6. 工资等级 信息在 salarygrade 工资等级表中\n\t\t7. emp.salary >= salarygrade.losalary  and emp.salary &lt;= salarygrade.hisalary\n*/</span>\n<span class=\"token keyword\">SELECT</span>\n\temp<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n\temp<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\temp<span class=\"token punctuation\">.</span>salary<span class=\"token punctuation\">,</span>\n\tjob<span class=\"token punctuation\">.</span>jname<span class=\"token punctuation\">,</span>\n\tjob<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">,</span>\n\tdept<span class=\"token punctuation\">.</span>dname<span class=\"token punctuation\">,</span>\n\tdept<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">,</span>\n\tt2<span class=\"token punctuation\">.</span>grade\n<span class=\"token keyword\">FROM</span>\n\temp\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> job <span class=\"token keyword\">ON</span> emp<span class=\"token punctuation\">.</span>job_id <span class=\"token operator\">=</span> job<span class=\"token punctuation\">.</span>id\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> dept <span class=\"token keyword\">ON</span> dept<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> salarygrade t2 <span class=\"token keyword\">ON</span> emp<span class=\"token punctuation\">.</span>salary <span class=\"token operator\">BETWEEN</span> t2<span class=\"token punctuation\">.</span>losalary <span class=\"token operator\">and</span> t2<span class=\"token punctuation\">.</span>hisalary<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>查询出部门编号、部门名称、部门位置、部门人数</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">/*\n\t分析：\n\t\t1. 部门编号、部门名称、部门位置 来自于部门 dept 表\n\t\t2. 部门人数: 在emp表中 按照dept_id 进行分组，然后count(*)统计数量\n\t\t3. 使用子查询，让部门表和分组后的表进行内连接\n*/</span>\n<span class=\"token comment\">-- 根据部门id分组查询每一个部门id和员工数</span>\n<span class=\"token keyword\">select</span> dept_id<span class=\"token punctuation\">,</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> dept_id<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span>\n\tdept<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n\tdept<span class=\"token punctuation\">.</span>dname<span class=\"token punctuation\">,</span>\n\tdept<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">,</span>\n\tt1<span class=\"token punctuation\">.</span>count\n<span class=\"token keyword\">FROM</span>\n\tdept<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span>\n\t\t<span class=\"token keyword\">SELECT</span>\n\t\t\tdept_id<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> count\n\t\t<span class=\"token keyword\">FROM</span>\n\t\t\temp\n\t\t<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n\t\t\tdept_id\n\t<span class=\"token punctuation\">)</span> t1\n<span class=\"token keyword\">WHERE</span>\n\tdept<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> t1<span class=\"token punctuation\">.</span>dept_id<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"4事务\"><a class=\"markdownIt-Anchor\" href=\"#4事务\">#</a> 4，事务</h2>\n<h3 id=\"41-概述\"><a class=\"markdownIt-Anchor\" href=\"#41-概述\">#</a> 4.1  概述</h3>\n<blockquote>\n<p>数据库的事务（Transaction）是一种机制、一个操作序列，包含了<mark>一组数据库操作命令</mark>。</p>\n<p>事务把所有的命令作为一个整体一起向系统提交或撤销操作请求，即这一组数据库命令<mark>要么同时成功，要么同时失败</mark>。</p>\n<p>事务是一个不可分割的工作逻辑单元。</p>\n</blockquote>\n<p>这些概念不好理解，接下来举例说明，如下图有一张表</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724224955876.png\" alt=\"image-20210724224955876\" style=\"zoom:80%;\" />\n<p>张三和李四账户中各有 100 块钱，现李四需要转换 500 块钱给张三，具体的转账操作为</p>\n<ul>\n<li>第一步：查询李四账户余额</li>\n<li>第二步：从李四账户金额 -500</li>\n<li>第三步：给张三账户金额 +500</li>\n</ul>\n<p>现在假设在转账过程中第二步完成后出现了异常第三步没有执行，就会造成李四账户金额少了 500，而张三金额并没有多 500；这样的系统是有问题的。如果解决呢？使用事务可以解决上述问题</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724225537533.png\" alt=\"image-20210724225537533\" style=\"zoom:70%;\" />\n<p>从上图可以看到在转账前开启事务，如果出现了异常回滚事务，三步正常执行就提交事务，这样就可以完美解决问题。</p>\n<h3 id=\"42-语法\"><a class=\"markdownIt-Anchor\" href=\"#42-语法\">#</a> 4.2  语法</h3>\n<ul>\n<li>\n<p>开启事务</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">START</span> <span class=\"token keyword\">TRANSACTION</span><span class=\"token punctuation\">;</span>\n或者  \n<span class=\"token keyword\">BEGIN</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>提交事务</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">commit</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>回滚事务</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">rollback</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n<h3 id=\"43-代码验证\"><a class=\"markdownIt-Anchor\" href=\"#43-代码验证\">#</a> 4.3  代码验证</h3>\n<ul>\n<li>\n<p>环境准备</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> account<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 创建账户表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> account<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">int</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span>\n\tname <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tmoney <span class=\"token keyword\">double</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 添加数据</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> account<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>money<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>不加事务演示问题</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 转账操作</span>\n<span class=\"token comment\">-- 1. 查询李四账户金额是否大于500</span>\n\n<span class=\"token comment\">-- 2. 李四账户 -500</span>\n<span class=\"token keyword\">UPDATE</span> account <span class=\"token keyword\">set</span> money <span class=\"token operator\">=</span> money <span class=\"token operator\">-</span> <span class=\"token number\">500</span> <span class=\"token keyword\">where</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'李四'</span><span class=\"token punctuation\">;</span>\n\n出现异常了<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token comment\">-- 此处不是注释，在整体执行时会出问题，后面的sql则不执行</span>\n<span class=\"token comment\">-- 3. 张三账户 +500</span>\n<span class=\"token keyword\">UPDATE</span> account <span class=\"token keyword\">set</span> money <span class=\"token operator\">=</span> money <span class=\"token operator\">+</span> <span class=\"token number\">500</span> <span class=\"token keyword\">where</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'张三'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>整体执行结果肯定会出问题，我们查询账户表中数据，发现李四账户少了 500。</p>\n<img src=\"F:\\blog\\xcblog\\source\\_posts\\assets\\image-20210724230250263.png\" alt=\"image-20210724230250263\" style=\"zoom:90%;\" />\n</li>\n<li>\n<p>添加事务 sql 如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 开启事务</span>\n<span class=\"token keyword\">BEGIN</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 转账操作</span>\n<span class=\"token comment\">-- 1. 查询李四账户金额是否大于500</span>\n\n<span class=\"token comment\">-- 2. 李四账户 -500</span>\n<span class=\"token keyword\">UPDATE</span> account <span class=\"token keyword\">set</span> money <span class=\"token operator\">=</span> money <span class=\"token operator\">-</span> <span class=\"token number\">500</span> <span class=\"token keyword\">where</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'李四'</span><span class=\"token punctuation\">;</span>\n\n出现异常了<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token comment\">-- 此处不是注释，在整体执行时会出问题，后面的sql则不执行</span>\n<span class=\"token comment\">-- 3. 张三账户 +500</span>\n<span class=\"token keyword\">UPDATE</span> account <span class=\"token keyword\">set</span> money <span class=\"token operator\">=</span> money <span class=\"token operator\">+</span> <span class=\"token number\">500</span> <span class=\"token keyword\">where</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'张三'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 提交事务</span>\n<span class=\"token keyword\">COMMIT</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 回滚事务</span>\n<span class=\"token keyword\">ROLLBACK</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上面 sql 中的执行成功进选择执行提交事务，而出现问题则执行回滚事务的语句。以后我们肯定不可能这样操作，而是在 java 中进行操作，在 java 中可以抓取异常，没出现异常提交事务，出现异常回滚事务。</p>\n</li>\n</ul>\n<h3 id=\"44-事务的四大特征\"><a class=\"markdownIt-Anchor\" href=\"#44-事务的四大特征\">#</a> 4.4  事务的四大特征</h3>\n<ul>\n<li>\n<p>原子性（Atomicity）: 事务是不可分割的最小操作单位，要么同时成功，要么同时失败</p>\n</li>\n<li>\n<p>一致性（Consistency） : 事务完成时，必须使所有的数据都保持一致状态</p>\n</li>\n<li>\n<p>隔离性（Isolation） : 多个事务之间，操作的可见性</p>\n</li>\n<li>\n<p>持久性（Durability） : 事务一旦提交或回滚，它对数据库中的数据的改变就是永久的</p>\n</li>\n</ul>\n<blockquote>\n<p><mark>说明：</mark></p>\n<p>mysql 中事务是自动提交的。</p>\n<p>也就是说我们不添加事务执行 sql 语句，语句执行完毕会自动的提交事务。</p>\n<p>可以通过下面语句查询默认提交方式：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token constant\">SELECT</span> @<span class=\"token annotation punctuation\">@autocommit</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>查询到的结果是 1 则表示自动提交，结果是 0 表示手动提交。当然也可以通过下面语句修改提交方式</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">set</span> @<span class=\"token variable\">@autocommit</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</blockquote>\n",
            "tags": []
        },
        {
            "id": "https://imxiaocheng.github.io/2023/05/09/hello-world/",
            "url": "https://imxiaocheng.github.io/2023/05/09/hello-world/",
            "title": "Hello World",
            "date_published": "2023-05-09T01:10:07.484Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        }
    ]
}